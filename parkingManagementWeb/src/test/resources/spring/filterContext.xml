<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012-2013 Trento RISE Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
    http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
<!-- 	<bean -->
<!-- 		class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer" /> -->

	<sec:global-method-security pre-post-annotations="enabled" />
	
	<!-- AC SERVICE PROVIDER FILTER INTEGRATION -->
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/css/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/partials/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/imgs/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/i18n/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/imgs/markerIcons/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/js/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/lib/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/fonts/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/login" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/viewallrv" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
        pattern="/viewalltn" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/rest/nosec/**" security="none" />
	<http xmlns="http://www.springframework.org/schema/security"
		pattern="/rest/appid/**" security="none" />
	
<!-- 	<sec:http pattern="/rest/**" entry-point-ref="forbEntryPoint" -->
<!-- 		use-expressions="true" create-session="stateless">ifRequired  -->
<!-- 		<sec:custom-filter position="PRE_AUTH_FILTER" ref="authTokenFilter" /> -->
<!-- 		<sec:intercept-url pattern="/**" access="isFullyAuthenticated()" /> -->
<!-- 	</sec:http> -->

	<!-- Rest WS security configuration -->
	<sec:http pattern="/rest/**" use-expressions="true"
	    authentication-manager-ref="mongoAuthenticationManager">
    	<sec:http-basic />
    	<sec:intercept-url pattern="/**" access="isFullyAuthenticated()"/>
	</sec:http>
	
	<!-- App login configuration -->
	<sec:http pattern="/**" use-expressions="true"
	    auto-config="false" authentication-manager-ref="mongoAuthenticationManager"><!-- authentication-manager-ref="mongoAuthenticationManager" -->
		<sec:http-basic />
		<sec:intercept-url pattern="/login" access="permitAll" />
		<sec:intercept-url pattern="/logout" access="permitAll" />
		<sec:intercept-url pattern="/j_spring_security_check" access="permitAll" />
		<sec:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN')" />
		
		<sec:form-login login-page="/login" default-target-url="/home" always-use-default-target="true"
		    login-processing-url="/login.do" username-parameter="j_username" password-parameter="j_password" 
		     authentication-failure-url="/login?error=true"  />
		<sec:logout logout-url="/logout" invalidate-session="true" delete-cookies="true" logout-success-url="/login" />
		
	</sec:http>
	
	<context:property-placeholder location="classpath:tm.properties" />
	
	<!-- MyWeb console authentication manager with base authentication -->
    <sec:authentication-manager id="mongoAuthenticationManager">
		<sec:authentication-provider user-service-ref="mongoUserDetailsService"> 
			<sec:password-encoder hash="plaintext" />
		</sec:authentication-provider>
	</sec:authentication-manager>
	
    <context:component-scan base-package="it.smartcommunitylab.parking.management.web" />
	
	<!-- MyWeb Portal login configuration -->
<!-- 	<sec:http pattern="/**" disable-url-rewriting="true" auto-config="false"> -->
<!-- 	    <sec:intercept-url pattern="/prelogin" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
<!-- 	    <sec:intercept-url pattern="/cookie_info" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
<!-- 	    <sec:intercept-url pattern="/ifindex" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
<!-- 	    <sec:intercept-url pattern="/adc_login" access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
<!-- 		<sec:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" /> -->
<!-- 		<sec:session-management invalid-session-url="/prelogin" session-fixation-protection="newSession" /> -->
<!-- 		<sec:form-login login-page="/prelogin" /> -->
<!-- 		<sec:logout invalidate-session="true" logout-url="/logout" -->
<!-- 			delete-cookies="true" -->
<!-- 			logout-success-url="/prelogin" /> -->
<!-- 	</sec:http> -->

		<mongo:mongo host="${mongo.host}" port="${mongo.port}" />

		<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
			<constructor-arg ref="mongo" />
 			<constructor-arg name="databaseName"
				value="${mongo.db}" />
		</bean>	
	
	 	<!-- Base package to scan the mongo repositories, where we create de DAOS to access data and domain objects -->
     	<mongo:repositories base-package="it.smartcommunitylab.parking.management.web.repository" />

</beans>
